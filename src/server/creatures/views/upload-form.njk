{% extends 'layouts/page.njk' %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}

{% block content %}
  {{ appHeading({
    title: heading,
    caption: "Upload all the details about your mythical creature sighting."
  }) }}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <div class="govuk-body" data-testid="app-page-body">

        <form action="{{ action }}" method="post" enctype="multipart/form-data">
          {% call govukFieldset() %}

            {{ govukSelect({
              id: "kind",
              name: "kind",
              label: {
                text: "What kind of creature?",
                classes: "govuk-label--m"
              },
              items: kindsOfCreatures,
              errorMessage: {
                text: formErrors.kind.message
              } if formErrors.kind.message,
              value: formValues.kind if formValues.kind
            }) }}

            {{ govukFileUpload({
              id: "creatureFiles",
              name: "creatureFiles",
              label: {
                text: "Creature",
                classes: "govuk-label--m"
              },
              hint: {
                text: "Filetypes of .jpeg with a max size of 100kb"
              },
              attributes: {
                multiple: "multiple"
              },
              errorMessage: {
                text: formErrors.creatureFiles.message
              } if formErrors.creatureFiles.message
            }) }}

          {% endcall %}

          {{ govukDateInput({
            id: "sighting-date",
            fieldset: {
              legend: {
                text: "Date of sighting",
                isPageHeading: true,
                classes: "govuk-fieldset__legend--m"
              }
            },
            hint: {
              text: "For example, 27/03/2024"
            },
            errorMessage: {
              text: formErrors.date.message
            } if formErrors.date.message,
            items: [
              {
                name: "date[day]",
                label: "Day",
                classes: "govuk-input--width-2",
                value: formValues.date.day
              },
              {
                name: "date[month]",
                label: "Month",
                classes: "govuk-input--width-2",
                value: formValues.date.month
              },
              {
                name: "date[year]",
                label: "Year",
                classes: "govuk-input--width-4",
                value: formValues.date.year
              }
            ]
          }) }}

          {{ govukRadios({
            classes: "govuk-radios--inline",
            name: "realSighting",
            fieldset: {
              legend: {
                text: "Was this sighting in a dream?",
                isPageHeading: true,
                classes: "govuk-fieldset__legend--m"
              }
            },
            value: formValue.realSighting,
            items: [
              {
                value: "yes",
                text: "Yes"
              },
              {
                value: "no",
                text: "No"
              }
            ],
            errorMessage: {
              text: formErrors.realSighting.message
            } if formErrors.realSighting.message,
            value: formValues.realSighting
          }) }}

          {% call govukFieldset({
            legend: {
              text: "Address of sighting",
              classes: "govuk-fieldset__legend--m",
              isPageHeading: true
            }
          }) %}

            {{ govukInput({
              label: {
                text: "Address line 1"
              },
              id: "address-line-1",
              name: "addressLine1",
              autocomplete: "address-line1",
              errorMessage: {
                text: formErrors.addressLine1.message
              } if formErrors.addressLine1.message,
              value: formValues.addressLine1
            }) }}

            {{ govukInput({
              label: {
                text: "Address line 2 (optional)"
              },
              id: "address-line-2",
              name: "addressLine2",
              autocomplete: "address-line2",
              value: formValues.addressLine2
            }) }}

            {{ govukInput({
              label: {
                text: "Town or city"
              },
              classes: "govuk-!-width-two-thirds",
              id: "address-town",
              name: "addressTown",
              autocomplete: "address-level2",
              errorMessage: {
                text: formErrors.addressTown.message
              } if formErrors.addressTown.message,
              value: formValues.addressTown

            }) }}

            {{ govukInput({
              label: {
                text: "Postcode"
              },
              classes: "govuk-input--width-10",
              id: "address-postcode",
              name: "addressPostcode",
              autocomplete: "postal-code",
              errorMessage: {
                text: formErrors.addressPostcode.message
              } if formErrors.addressPostcode.message,
              value: formValues.addressPostcode
            }) }}

          {% endcall %}

          {{ govukFileUpload({
            id: "evidenceFiles",
            name: "evidenceFiles",
            label: {
              text: "Supporting evidence",
              classes: "govuk-label--m"
            },
            hint: {
              text: "Filetypes of .jpeg with a max size of 100kb"
            },
            attributes: {
              multiple: "multiple"
            },
            errorMessage: {
              text: formErrors.evidenceFiles.message
            } if formErrors.evidenceFiles.message
          }) }}

          {{ govukButton({
            text: "Upload"
          }) }}
        </form>
      </div>
    </div>
  </div>


{% endblock %}
